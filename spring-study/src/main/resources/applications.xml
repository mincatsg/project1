<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd"
default-autowire="byName">
    <!-- 新增这里 -->
    <!-- 创建一个字符串对象, 对象名为myName, 通过new String("小比特")生成对象 -->
    <bean id="myName" class="java.lang.String">
        <constructor-arg value="小比特" />
    </bean>

    <!-- 无参的构造方法创建对象 -->
    <bean id="duck1"  class="frank.ioc.Duck">
        <constructor-arg ref="myName" />
<!--        <property  name= "name" ref="myName" />-->
        <property name="age" value="20" />
    </bean>

    <bean id="duck2"  class="frank.ioc.Duck">
        <constructor-arg  value="LadyGaga" />
<!--        <property name="name" value="LadyGaga" />-->
        <property name="age" value="30" />
    </bean>

    <bean id="duckShop" class="frank.ioc.DuckShop" scope="prototype">
        <property name="name" value="比特烤鸭店" />
        <property name="ducks" >
        <list>
            <ref bean="duck1" />
            <ref bean="duck2" />
        </list>
        </property>
    </bean>

    <!-- 实例的工厂方法创建bean对象 -->
    <bean id="duckFactory"  class="frank.ioc.DuckFactory" />

    <bean id="duck5"  class="frank.ioc.Duck" factory-bean="duckFactory" factory-method="create" />


    <!-- 实例的静态方法创建bean对象 -->
    <bean id="duck6" class="frank.ioc.DuckFactory" factory-method="create2" />

    <!--  自已在类中定义init方法,在容器注册时会调用这个你自已创建的方法  -->
    <bean id="lifecycle" class="frank.ioc.Lifecycle" init-method="init" destroy-method="destroy2"/>

    <!-- 扫描base-package的包,所以得子包都会进行扫描: 包含spring注解的类:
      1.@Controller:  做前端请求处理的类
      2.@Service:     业务请求的类
      3.@Compoent:    宽泛的概念,一般指组件
      4.@Reposistory:  一般数据操作的类
      5.@Configuration:  配置类     （@Configuration + @Bean）
      -->

    <context:component-scan base-package="frank.scan" />
</beans>